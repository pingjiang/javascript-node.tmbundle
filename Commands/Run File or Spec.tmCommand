<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>command</key>
	<string>#!/usr/bin/env node

// NOTE: This original implementation has support for running node.js/express web application jspec test files. This will be extracted into a separate bundle + command at some stage.

var sys = require("util");
if(process.env.TM_FILENAME.match(/(.*)spec\.js/)) {
  require.paths.unshift(process.env.TM_BUNDLE_SUPPORT + '/spec/lib');
  if (typeof process.env.TM_PROJECT_DIRECTORY != "undefined" &amp;&amp; process.env.TM_PROJECT_DIRECTORY != null &amp;&amp; process.env.TM_PROJECT_DIRECTORY != "") {
    require.paths.unshift(process.env.TM_PROJECT_DIRECTORY + '/lib');
    require.paths.unshift(process.env.TM_PROJECT_DIRECTORY + '/src');
    require.paths.unshift(process.env.TM_PROJECT_DIRECTORY + '/spec');
  }
  require("jspec");

  quit = process.exit;
  print = puts;

  readFile = function(path) {
    var promise = require('posix').cat(path, "utf8");
    var result = '';
    promise.addErrback(function(){ throw "failed to read file `" + path + "'"; });
    promise.addCallback(function(contents){
      result = contents;
    });
    promise.wait();
    return result;
  };
  
  GLOBAL.console = {
    log: sys.puts,
    warn: sys.puts,
    error: sys.puts,
    group: function(){},
    groupEnd: function(){}
  };
  JSpec.exec(process.env.TM_FILEPATH);
  JSpec.run({ formatter: JSpec.formatters.Console, failuresOnly: true });
  JSpec.report();

} else {
  var spawn = require('child_process').spawn;
  var script = spawn("node", [process.env.TM_FILEPATH]);
  
  sys.puts('&lt;!doctype html&gt; &lt;html lang="zh"&gt; &lt;head&gt; &lt;meta charset="UTF-8" /&gt; &lt;title&gt;NodeJS Result&lt;/title&gt;');
  sys.puts('&lt;style type="text/css" rel="stylesheet"&gt;');
  sys.puts('code#nodejs_result pre { margin: 2px 0px 2px 10px; font: 12px "Courier New" }');
  sys.puts('&lt;/style&gt;');
  sys.puts('&lt;/head&gt; &lt;body&gt; &lt;code id="nodejs_result"&gt; &lt;pre&gt;');
  
  script.stdout.on("data", function(data) {
    if (data !== null) { sys.puts(data); }
  });
  script.stderr.on("data", function(data) {
    if (data !== null) { sys.puts("ERROR: " + data); }
  });
  
  script.on('close', function (code) {
  	sys.puts('&lt;/pre&gt; &lt;/code&gt; &lt;b&gt;child process exited with code ' + code + '&lt;/b&gt; &lt;/body&gt; &lt;/html&gt;');
  });
  
}
</string>
	<key>input</key>
	<string>document</string>
	<key>keyEquivalent</key>
	<string>@r</string>
	<key>name</key>
	<string>Run File or Spec</string>
    <key>outputFormat</key>
    <string>html</string>
    <key>outputLocation</key>
    <string>newWindow</string>
	<key>scope</key>
	<string>source.js</string>
	<key>uuid</key>
	<string>5ECAB6F6-77CD-4A15-A646-BE4B01B3944F</string>
</dict>
</plist>
